{"ast":null,"code":"var _jsxFileName = \"/Users/luke/Library/CloudStorage/Dropbox/code/fly-snake/src/AISnakeGame.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 15;\nconst CELL_SIZE = 25;\nconst INITIAL_SNAKE = [{\n  x: 7,\n  y: 7\n}];\nconst INITIAL_DIRECTION = {\n  x: 1,\n  y: 0\n};\nconst INITIAL_FOOD = {\n  x: 5,\n  y: 5\n};\nconst AISnakeGame = () => {\n  // ... [Keep all the existing state and game logic]\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minHeight: '100vh',\n      backgroundColor: '#2C3E50',\n      color: '#ECF0F1',\n      fontFamily: 'Arial, sans-serif',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '36px',\n        fontWeight: 'bold',\n        marginBottom: '20px',\n        color: '#E74C3C'\n      },\n      children: \"AI Snake Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: `${GRID_SIZE * CELL_SIZE}px`,\n        height: `${GRID_SIZE * CELL_SIZE}px`,\n        display: 'grid',\n        gridTemplateColumns: `repeat(${GRID_SIZE}, 1fr)`,\n        gridTemplateRows: `repeat(${GRID_SIZE}, 1fr)`,\n        gap: '1px',\n        border: '3px solid #34495E',\n        borderRadius: '10px',\n        backgroundColor: '#34495E',\n        boxShadow: '0 0 20px rgba(0, 0, 0, 0.3)',\n        overflow: 'hidden'\n      },\n      children: Array.from({\n        length: GRID_SIZE * GRID_SIZE\n      }).map((_, index) => {\n        const x = index % GRID_SIZE;\n        const y = Math.floor(index / GRID_SIZE);\n        const isSnake = snake.some(segment => segment.x === x && segment.y === y);\n        const isFood = food.x === x && food.y === y;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            height: '100%',\n            backgroundColor: isSnake ? '#2ECC71' : isFood ? '#E74C3C' : '#3498DB',\n            borderRadius: '3px',\n            transition: 'background-color 0.3s'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        fontSize: '24px',\n        fontWeight: 'bold'\n      },\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        fontSize: '16px',\n        color: '#BDC3C7',\n        textAlign: 'center'\n      },\n      children: [\"AI is controlling the snake\", gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '28px',\n            fontWeight: 'bold',\n            color: '#E74C3C'\n          },\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginTop: '10px',\n            padding: '12px 24px',\n            backgroundColor: '#3498DB',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer',\n            fontSize: '18px',\n            transition: 'background-color 0.3s'\n          },\n          onClick: resetGame,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = AISnakeGame;\nexport default AISnakeGame;\nvar _c;\n$RefreshReg$(_c, \"AISnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","GRID_SIZE","CELL_SIZE","INITIAL_SNAKE","x","y","INITIAL_DIRECTION","INITIAL_FOOD","AISnakeGame","style","display","flexDirection","alignItems","justifyContent","minHeight","backgroundColor","color","fontFamily","padding","children","fontSize","fontWeight","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","width","height","gridTemplateColumns","gridTemplateRows","gap","border","borderRadius","boxShadow","overflow","Array","from","length","map","_","index","Math","floor","isSnake","snake","some","segment","isFood","food","transition","marginTop","score","textAlign","gameOver","cursor","onClick","resetGame","_c","$RefreshReg$"],"sources":["/Users/luke/Library/CloudStorage/Dropbox/code/fly-snake/src/AISnakeGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nconst GRID_SIZE = 15;\nconst CELL_SIZE = 25;\nconst INITIAL_SNAKE = [{ x: 7, y: 7 }];\nconst INITIAL_DIRECTION = { x: 1, y: 0 };\nconst INITIAL_FOOD = { x: 5, y: 5 };\n\nconst AISnakeGame = () => {\n  // ... [Keep all the existing state and game logic]\n\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minHeight: '100vh',\n      backgroundColor: '#2C3E50',\n      color: '#ECF0F1',\n      fontFamily: 'Arial, sans-serif',\n      padding: '20px'\n    }}>\n      <h1 style={{ \n        fontSize: '36px', \n        fontWeight: 'bold', \n        marginBottom: '20px',\n        color: '#E74C3C'\n      }}>AI Snake Game</h1>\n      <div style={{\n        width: `${GRID_SIZE * CELL_SIZE}px`,\n        height: `${GRID_SIZE * CELL_SIZE}px`,\n        display: 'grid',\n        gridTemplateColumns: `repeat(${GRID_SIZE}, 1fr)`,\n        gridTemplateRows: `repeat(${GRID_SIZE}, 1fr)`,\n        gap: '1px',\n        border: '3px solid #34495E',\n        borderRadius: '10px',\n        backgroundColor: '#34495E',\n        boxShadow: '0 0 20px rgba(0, 0, 0, 0.3)',\n        overflow: 'hidden'\n      }}>\n        {Array.from({ length: GRID_SIZE * GRID_SIZE }).map((_, index) => {\n          const x = index % GRID_SIZE;\n          const y = Math.floor(index / GRID_SIZE);\n          const isSnake = snake.some(segment => segment.x === x && segment.y === y);\n          const isFood = food.x === x && food.y === y;\n          return (\n            <div\n              key={index}\n              style={{\n                width: '100%',\n                height: '100%',\n                backgroundColor: isSnake ? '#2ECC71' : isFood ? '#E74C3C' : '#3498DB',\n                borderRadius: '3px',\n                transition: 'background-color 0.3s'\n              }}\n            />\n          );\n        })}\n      </div>\n      <div style={{ \n        marginTop: '20px', \n        fontSize: '24px',\n        fontWeight: 'bold'\n      }}>Score: {score}</div>\n      <div style={{ \n        marginTop: '20px', \n        fontSize: '16px', \n        color: '#BDC3C7',\n        textAlign: 'center'\n      }}>\n        AI is controlling the snake\n        {gameOver && (\n          <div style={{ marginTop: '10px' }}>\n            <p style={{ fontSize: '28px', fontWeight: 'bold', color: '#E74C3C' }}>Game Over!</p>\n            <button\n              style={{\n                marginTop: '10px',\n                padding: '12px 24px',\n                backgroundColor: '#3498DB',\n                color: 'white',\n                border: 'none',\n                borderRadius: '5px',\n                cursor: 'pointer',\n                fontSize: '18px',\n                transition: 'background-color 0.3s'\n              }}\n              onClick={resetGame}\n            >\n              Play Again\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AISnakeGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}