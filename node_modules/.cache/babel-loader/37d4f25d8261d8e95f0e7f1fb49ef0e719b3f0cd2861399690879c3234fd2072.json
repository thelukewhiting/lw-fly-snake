{"ast":null,"code":"var _jsxFileName = \"/Users/luke/Library/CloudStorage/Dropbox/code/fly-snake/src/AISnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 15;\nconst CELL_SIZE = 20;\nconst INITIAL_SNAKE = [{\n  x: 7,\n  y: 7\n}];\nconst INITIAL_DIRECTION = {\n  x: 1,\n  y: 0\n};\nconst INITIAL_FOOD = {\n  x: 5,\n  y: 5\n};\n\n// ... [Keep all the existing functions: manhattanDistance, getNeighbors, findPath, etc.]\n\nconst AISnakeGame = () => {\n  _s();\n  const [snake, setSnake] = useState(INITIAL_SNAKE);\n  const [direction, setDirection] = useState(INITIAL_DIRECTION);\n  const [food, setFood] = useState(INITIAL_FOOD);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n\n  // ... [Keep all the existing game logic]\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"AI Snake Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-4 border-gray-800 relative bg-white\",\n      style: {\n        width: GRID_SIZE * CELL_SIZE,\n        height: GRID_SIZE * CELL_SIZE\n      },\n      children: [snake.map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bg-green-500\",\n        style: {\n          width: CELL_SIZE - 1,\n          height: CELL_SIZE - 1,\n          left: segment.x * CELL_SIZE,\n          top: segment.y * CELL_SIZE,\n          border: '0.5px solid darkgreen'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bg-red-500\",\n        style: {\n          width: CELL_SIZE - 1,\n          height: CELL_SIZE - 1,\n          left: food.x * CELL_SIZE,\n          top: food.y * CELL_SIZE,\n          border: '0.5px solid darkred'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-xl\",\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl font-bold text-red-600\",\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n        onClick: resetGame,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-sm text-gray-600\",\n      children: \"AI is controlling the snake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(AISnakeGame, \"QLamxVBQGqVMuDPw6drFI2QDNww=\");\n_c = AISnakeGame;\nexport default AISnakeGame;\nvar _c;\n$RefreshReg$(_c, \"AISnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","GRID_SIZE","CELL_SIZE","INITIAL_SNAKE","x","y","INITIAL_DIRECTION","INITIAL_FOOD","AISnakeGame","_s","snake","setSnake","direction","setDirection","food","setFood","gameOver","setGameOver","score","setScore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","map","segment","index","left","top","border","onClick","resetGame","_c","$RefreshReg$"],"sources":["/Users/luke/Library/CloudStorage/Dropbox/code/fly-snake/src/AISnakeGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nconst GRID_SIZE = 15;\nconst CELL_SIZE = 20;\nconst INITIAL_SNAKE = [{ x: 7, y: 7 }];\nconst INITIAL_DIRECTION = { x: 1, y: 0 };\nconst INITIAL_FOOD = { x: 5, y: 5 };\n\n// ... [Keep all the existing functions: manhattanDistance, getNeighbors, findPath, etc.]\n\nconst AISnakeGame = () => {\n  const [snake, setSnake] = useState(INITIAL_SNAKE);\n  const [direction, setDirection] = useState(INITIAL_DIRECTION);\n  const [food, setFood] = useState(INITIAL_FOOD);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n\n  // ... [Keep all the existing game logic]\n\n  return (\n    <div className=\"flex flex-col items-center justify-center h-screen bg-gray-100\">\n      <h1 className=\"text-3xl font-bold mb-4\">AI Snake Game</h1>\n      <div\n        className=\"border-4 border-gray-800 relative bg-white\"\n        style={{\n          width: GRID_SIZE * CELL_SIZE,\n          height: GRID_SIZE * CELL_SIZE,\n        }}\n      >\n        {snake.map((segment, index) => (\n          <div\n            key={index}\n            className=\"absolute bg-green-500\"\n            style={{\n              width: CELL_SIZE - 1,\n              height: CELL_SIZE - 1,\n              left: segment.x * CELL_SIZE,\n              top: segment.y * CELL_SIZE,\n              border: '0.5px solid darkgreen',\n            }}\n          />\n        ))}\n        <div\n          className=\"absolute bg-red-500\"\n          style={{\n            width: CELL_SIZE - 1,\n            height: CELL_SIZE - 1,\n            left: food.x * CELL_SIZE,\n            top: food.y * CELL_SIZE,\n            border: '0.5px solid darkred',\n          }}\n        />\n      </div>\n      <div className=\"mt-4 text-xl\">Score: {score}</div>\n      {gameOver && (\n        <div className=\"mt-4\">\n          <p className=\"text-xl font-bold text-red-600\">Game Over!</p>\n          <button\n            className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n            onClick={resetGame}\n          >\n            Play Again\n          </button>\n        </div>\n      )}\n      <div className=\"mt-4 text-sm text-gray-600\">\n        AI is controlling the snake\n      </div>\n    </div>\n  );\n};\n\nexport default AISnakeGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}