{"ast":null,"code":"var _jsxFileName = \"/Users/luke/Library/CloudStorage/Dropbox/code/fly-snake/src/SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 15;\nconst CELL_SIZE = 20;\nconst INITIAL_SNAKE = [{\n  x: 7,\n  y: 7\n}];\nconst INITIAL_DIRECTION = {\n  x: 1,\n  y: 0\n};\nconst INITIAL_FOOD = {\n  x: 5,\n  y: 5\n};\nconst SnakeGame = () => {\n  _s();\n  console.log(\"SnakeGame component rendered\");\n  const [snake, setSnake] = useState(INITIAL_SNAKE);\n  const [direction, setDirection] = useState(INITIAL_DIRECTION);\n  const [food, setFood] = useState(INITIAL_FOOD);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const moveSnake = useCallback(() => {\n    console.log(\"moveSnake called\");\n    if (gameOver) return;\n    const newSnake = [...snake];\n    const head = {\n      ...newSnake[0]\n    };\n    head.x += direction.x;\n    head.y += direction.y;\n\n    // Check for collision with walls\n    if (head.x < 0 || head.x >= GRID_SIZE || head.y < 0 || head.y >= GRID_SIZE) {\n      setGameOver(true);\n      return;\n    }\n\n    // Check for collision with self\n    if (newSnake.some(segment => segment.x === head.x && segment.y === head.y)) {\n      setGameOver(true);\n      return;\n    }\n    newSnake.unshift(head);\n\n    // Check if snake ate food\n    if (head.x === food.x && head.y === food.y) {\n      setScore(prevScore => prevScore + 1);\n      setFood(getRandomFood(newSnake));\n    } else {\n      newSnake.pop();\n    }\n    setSnake(newSnake);\n  }, [snake, direction, food, gameOver]);\n  useEffect(() => {\n    const handleKeyPress = e => {\n      console.log(\"Key pressed:\", e.key);\n      switch (e.key) {\n        case 'ArrowUp':\n          if (direction.y === 0) setDirection({\n            x: 0,\n            y: -1\n          });\n          break;\n        case 'ArrowDown':\n          if (direction.y === 0) setDirection({\n            x: 0,\n            y: 1\n          });\n          break;\n        case 'ArrowLeft':\n          if (direction.x === 0) setDirection({\n            x: -1,\n            y: 0\n          });\n          break;\n        case 'ArrowRight':\n          if (direction.x === 0) setDirection({\n            x: 1,\n            y: 0\n          });\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [direction]);\n  useEffect(() => {\n    console.log(\"Game loop started\");\n    const gameLoop = setInterval(moveSnake, 200);\n    return () => clearInterval(gameLoop);\n  }, [moveSnake]);\n  const getRandomFood = useCallback(snake => {\n    let newFood;\n    do {\n      newFood = {\n        x: Math.floor(Math.random() * GRID_SIZE),\n        y: Math.floor(Math.random() * GRID_SIZE)\n      };\n    } while (snake.some(segment => segment.x === newFood.x && segment.y === newFood.y));\n    return newFood;\n  }, []);\n  const resetGame = () => {\n    console.log(\"Game reset\");\n    setSnake(INITIAL_SNAKE);\n    setDirection(INITIAL_DIRECTION);\n    setFood(INITIAL_FOOD);\n    setGameOver(false);\n    setScore(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Nokia Snake Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-4 border-gray-800 relative\",\n      style: {\n        width: GRID_SIZE * CELL_SIZE,\n        height: GRID_SIZE * CELL_SIZE\n      },\n      children: [snake.map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-500 absolute\",\n        style: {\n          width: CELL_SIZE,\n          height: CELL_SIZE,\n          left: segment.x * CELL_SIZE,\n          top: segment.y * CELL_SIZE\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-500 absolute\",\n        style: {\n          width: CELL_SIZE,\n          height: CELL_SIZE,\n          left: food.x * CELL_SIZE,\n          top: food.y * CELL_SIZE\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-xl\",\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl font-bold text-red-600\",\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n        onClick: resetGame,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-sm text-gray-600\",\n      children: \"Use arrow keys to control the snake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"ysOQlSQE2oT0X0e5vm3fe5tcaig=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","GRID_SIZE","CELL_SIZE","INITIAL_SNAKE","x","y","INITIAL_DIRECTION","INITIAL_FOOD","SnakeGame","_s","console","log","snake","setSnake","direction","setDirection","food","setFood","gameOver","setGameOver","score","setScore","moveSnake","newSnake","head","some","segment","unshift","prevScore","getRandomFood","pop","handleKeyPress","e","key","window","addEventListener","removeEventListener","gameLoop","setInterval","clearInterval","newFood","Math","floor","random","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","map","index","left","top","onClick","_c","$RefreshReg$"],"sources":["/Users/luke/Library/CloudStorage/Dropbox/code/fly-snake/src/SnakeGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nconst GRID_SIZE = 15;\nconst CELL_SIZE = 20;\nconst INITIAL_SNAKE = [{ x: 7, y: 7 }];\nconst INITIAL_DIRECTION = { x: 1, y: 0 };\nconst INITIAL_FOOD = { x: 5, y: 5 };\n\nconst SnakeGame = () => {\n  console.log(\"SnakeGame component rendered\");\n\n  const [snake, setSnake] = useState(INITIAL_SNAKE);\n  const [direction, setDirection] = useState(INITIAL_DIRECTION);\n  const [food, setFood] = useState(INITIAL_FOOD);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const moveSnake = useCallback(() => {\n    console.log(\"moveSnake called\");\n    if (gameOver) return;\n\n    const newSnake = [...snake];\n    const head = { ...newSnake[0] };\n    head.x += direction.x;\n    head.y += direction.y;\n\n    // Check for collision with walls\n    if (head.x < 0 || head.x >= GRID_SIZE || head.y < 0 || head.y >= GRID_SIZE) {\n      setGameOver(true);\n      return;\n    }\n\n    // Check for collision with self\n    if (newSnake.some(segment => segment.x === head.x && segment.y === head.y)) {\n      setGameOver(true);\n      return;\n    }\n\n    newSnake.unshift(head);\n\n    // Check if snake ate food\n    if (head.x === food.x && head.y === food.y) {\n      setScore(prevScore => prevScore + 1);\n      setFood(getRandomFood(newSnake));\n    } else {\n      newSnake.pop();\n    }\n\n    setSnake(newSnake);\n  }, [snake, direction, food, gameOver]);\n\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      console.log(\"Key pressed:\", e.key);\n      switch (e.key) {\n        case 'ArrowUp':\n          if (direction.y === 0) setDirection({ x: 0, y: -1 });\n          break;\n        case 'ArrowDown':\n          if (direction.y === 0) setDirection({ x: 0, y: 1 });\n          break;\n        case 'ArrowLeft':\n          if (direction.x === 0) setDirection({ x: -1, y: 0 });\n          break;\n        case 'ArrowRight':\n          if (direction.x === 0) setDirection({ x: 1, y: 0 });\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [direction]);\n\n  useEffect(() => {\n    console.log(\"Game loop started\");\n    const gameLoop = setInterval(moveSnake, 200);\n    return () => clearInterval(gameLoop);\n  }, [moveSnake]);\n\n  const getRandomFood = useCallback((snake) => {\n    let newFood;\n    do {\n      newFood = {\n        x: Math.floor(Math.random() * GRID_SIZE),\n        y: Math.floor(Math.random() * GRID_SIZE),\n      };\n    } while (snake.some(segment => segment.x === newFood.x && segment.y === newFood.y));\n    return newFood;\n  }, []);\n\n  const resetGame = () => {\n    console.log(\"Game reset\");\n    setSnake(INITIAL_SNAKE);\n    setDirection(INITIAL_DIRECTION);\n    setFood(INITIAL_FOOD);\n    setGameOver(false);\n    setScore(0);\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center h-screen bg-gray-100\">\n      <h1 className=\"text-3xl font-bold mb-4\">Nokia Snake Game</h1>\n      <div \n        className=\"border-4 border-gray-800 relative\"\n        style={{\n          width: GRID_SIZE * CELL_SIZE,\n          height: GRID_SIZE * CELL_SIZE,\n        }}\n      >\n        {snake.map((segment, index) => (\n          <div\n            key={index}\n            className=\"bg-green-500 absolute\"\n            style={{\n              width: CELL_SIZE,\n              height: CELL_SIZE,\n              left: segment.x * CELL_SIZE,\n              top: segment.y * CELL_SIZE,\n            }}\n          />\n        ))}\n        <div\n          className=\"bg-red-500 absolute\"\n          style={{\n            width: CELL_SIZE,\n            height: CELL_SIZE,\n            left: food.x * CELL_SIZE,\n            top: food.y * CELL_SIZE,\n          }}\n        />\n      </div>\n      <div className=\"mt-4 text-xl\">Score: {score}</div>\n      {gameOver && (\n        <div className=\"mt-4\">\n          <p className=\"text-xl font-bold text-red-600\">Game Over!</p>\n          <button\n            className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n            onClick={resetGame}\n          >\n            Play Again\n          </button>\n        </div>\n      )}\n      <div className=\"mt-4 text-sm text-gray-600\">\n        Use arrow keys to control the snake\n      </div>\n    </div>\n  );\n};\n\nexport default SnakeGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}