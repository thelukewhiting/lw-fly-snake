{"ast":null,"code":"var _jsxFileName = \"/Users/luke/Library/CloudStorage/Dropbox/code/fly-snake/src/SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 15;\nconst CELL_SIZE = 20;\nconst INITIAL_SNAKE = [{\n  x: 7,\n  y: 7\n}];\nconst INITIAL_DIRECTION = {\n  x: 1,\n  y: 0\n};\nconst INITIAL_FOOD = {\n  x: 5,\n  y: 5\n};\nconst SnakeGame = () => {\n  _s();\n  const [snake, setSnake] = useState(INITIAL_SNAKE);\n  const [direction, setDirection] = useState(INITIAL_DIRECTION);\n  const [food, setFood] = useState(INITIAL_FOOD);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const moveSnake = useCallback(() => {\n    if (gameOver) return;\n    const newSnake = [...snake];\n    const head = {\n      ...newSnake[0]\n    };\n    head.x += direction.x;\n    head.y += direction.y;\n    if (head.x < 0 || head.x >= GRID_SIZE || head.y < 0 || head.y >= GRID_SIZE) {\n      setGameOver(true);\n      return;\n    }\n    if (newSnake.some(segment => segment.x === head.x && segment.y === head.y)) {\n      setGameOver(true);\n      return;\n    }\n    newSnake.unshift(head);\n    if (head.x === food.x && head.y === food.y) {\n      setScore(prevScore => prevScore + 1);\n      setFood(getRandomFood(newSnake));\n    } else {\n      newSnake.pop();\n    }\n    setSnake(newSnake);\n  }, [snake, direction, food, gameOver]);\n  useEffect(() => {\n    const handleKeyPress = e => {\n      switch (e.key) {\n        case 'ArrowUp':\n          if (direction.y === 0) setDirection({\n            x: 0,\n            y: -1\n          });\n          break;\n        case 'ArrowDown':\n          if (direction.y === 0) setDirection({\n            x: 0,\n            y: 1\n          });\n          break;\n        case 'ArrowLeft':\n          if (direction.x === 0) setDirection({\n            x: -1,\n            y: 0\n          });\n          break;\n        case 'ArrowRight':\n          if (direction.x === 0) setDirection({\n            x: 1,\n            y: 0\n          });\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [direction]);\n  useEffect(() => {\n    const gameLoop = setInterval(moveSnake, 200);\n    return () => clearInterval(gameLoop);\n  }, [moveSnake]);\n  const getRandomFood = useCallback(snake => {\n    let newFood;\n    do {\n      newFood = {\n        x: Math.floor(Math.random() * GRID_SIZE),\n        y: Math.floor(Math.random() * GRID_SIZE)\n      };\n    } while (snake.some(segment => segment.x === newFood.x && segment.y === newFood.y));\n    return newFood;\n  }, []);\n  const resetGame = () => {\n    setSnake(INITIAL_SNAKE);\n    setDirection(INITIAL_DIRECTION);\n    setFood(INITIAL_FOOD);\n    setGameOver(false);\n    setScore(0);\n  };\n  const containerStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100vh',\n    backgroundColor: '#f3f4f6'\n  };\n  const gameAreaStyle = {\n    border: '4px solid #1f2937',\n    position: 'relative',\n    width: GRID_SIZE * CELL_SIZE,\n    height: GRID_SIZE * CELL_SIZE\n  };\n  const cellStyle = {\n    width: CELL_SIZE,\n    height: CELL_SIZE,\n    position: 'absolute'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '2rem',\n        fontWeight: 'bold',\n        marginBottom: '1rem'\n      },\n      children: \"Nokia Snake Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gameAreaStyle,\n      children: [snake.map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...cellStyle,\n          backgroundColor: '#22c55e',\n          left: segment.x * CELL_SIZE,\n          top: segment.y * CELL_SIZE\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...cellStyle,\n          backgroundColor: '#ef4444',\n          left: food.x * CELL_SIZE,\n          top: food.y * CELL_SIZE\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem',\n        fontSize: '1.25rem'\n      },\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '1.25rem',\n          fontWeight: 'bold',\n          color: '#dc2626'\n        },\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: '0.5rem',\n          padding: '0.5rem 1rem',\n          backgroundColor: '#3b82f6',\n          color: 'white',\n          border: 'none',\n          borderRadius: '0.25rem',\n          cursor: 'pointer'\n        },\n        onClick: resetGame,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem',\n        fontSize: '0.875rem',\n        color: '#4b5563'\n      },\n      children: \"Use arrow keys to control the snake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"ysOQlSQE2oT0X0e5vm3fe5tcaig=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","GRID_SIZE","CELL_SIZE","INITIAL_SNAKE","x","y","INITIAL_DIRECTION","INITIAL_FOOD","SnakeGame","_s","snake","setSnake","direction","setDirection","food","setFood","gameOver","setGameOver","score","setScore","moveSnake","newSnake","head","some","segment","unshift","prevScore","getRandomFood","pop","handleKeyPress","e","key","window","addEventListener","removeEventListener","gameLoop","setInterval","clearInterval","newFood","Math","floor","random","resetGame","containerStyle","display","flexDirection","alignItems","justifyContent","height","backgroundColor","gameAreaStyle","border","position","width","cellStyle","style","children","fontSize","fontWeight","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","index","left","top","marginTop","color","padding","borderRadius","cursor","onClick","_c","$RefreshReg$"],"sources":["/Users/luke/Library/CloudStorage/Dropbox/code/fly-snake/src/SnakeGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nconst GRID_SIZE = 15;\nconst CELL_SIZE = 20;\nconst INITIAL_SNAKE = [{ x: 7, y: 7 }];\nconst INITIAL_DIRECTION = { x: 1, y: 0 };\nconst INITIAL_FOOD = { x: 5, y: 5 };\n\nconst SnakeGame = () => {\n  const [snake, setSnake] = useState(INITIAL_SNAKE);\n  const [direction, setDirection] = useState(INITIAL_DIRECTION);\n  const [food, setFood] = useState(INITIAL_FOOD);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const moveSnake = useCallback(() => {\n    if (gameOver) return;\n\n    const newSnake = [...snake];\n    const head = { ...newSnake[0] };\n    head.x += direction.x;\n    head.y += direction.y;\n\n    if (head.x < 0 || head.x >= GRID_SIZE || head.y < 0 || head.y >= GRID_SIZE) {\n      setGameOver(true);\n      return;\n    }\n\n    if (newSnake.some(segment => segment.x === head.x && segment.y === head.y)) {\n      setGameOver(true);\n      return;\n    }\n\n    newSnake.unshift(head);\n\n    if (head.x === food.x && head.y === food.y) {\n      setScore(prevScore => prevScore + 1);\n      setFood(getRandomFood(newSnake));\n    } else {\n      newSnake.pop();\n    }\n\n    setSnake(newSnake);\n  }, [snake, direction, food, gameOver]);\n\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      switch (e.key) {\n        case 'ArrowUp':\n          if (direction.y === 0) setDirection({ x: 0, y: -1 });\n          break;\n        case 'ArrowDown':\n          if (direction.y === 0) setDirection({ x: 0, y: 1 });\n          break;\n        case 'ArrowLeft':\n          if (direction.x === 0) setDirection({ x: -1, y: 0 });\n          break;\n        case 'ArrowRight':\n          if (direction.x === 0) setDirection({ x: 1, y: 0 });\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [direction]);\n\n  useEffect(() => {\n    const gameLoop = setInterval(moveSnake, 200);\n    return () => clearInterval(gameLoop);\n  }, [moveSnake]);\n\n  const getRandomFood = useCallback((snake) => {\n    let newFood;\n    do {\n      newFood = {\n        x: Math.floor(Math.random() * GRID_SIZE),\n        y: Math.floor(Math.random() * GRID_SIZE),\n      };\n    } while (snake.some(segment => segment.x === newFood.x && segment.y === newFood.y));\n    return newFood;\n  }, []);\n\n  const resetGame = () => {\n    setSnake(INITIAL_SNAKE);\n    setDirection(INITIAL_DIRECTION);\n    setFood(INITIAL_FOOD);\n    setGameOver(false);\n    setScore(0);\n  };\n\n  const containerStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100vh',\n    backgroundColor: '#f3f4f6',\n  };\n\n  const gameAreaStyle = {\n    border: '4px solid #1f2937',\n    position: 'relative',\n    width: GRID_SIZE * CELL_SIZE,\n    height: GRID_SIZE * CELL_SIZE,\n  };\n\n  const cellStyle = {\n    width: CELL_SIZE,\n    height: CELL_SIZE,\n    position: 'absolute',\n  };\n\n  return (\n    <div style={containerStyle}>\n      <h1 style={{ fontSize: '2rem', fontWeight: 'bold', marginBottom: '1rem' }}>Nokia Snake Game</h1>\n      <div style={gameAreaStyle}>\n        {snake.map((segment, index) => (\n          <div\n            key={index}\n            style={{\n              ...cellStyle,\n              backgroundColor: '#22c55e',\n              left: segment.x * CELL_SIZE,\n              top: segment.y * CELL_SIZE,\n            }}\n          />\n        ))}\n        <div\n          style={{\n            ...cellStyle,\n            backgroundColor: '#ef4444',\n            left: food.x * CELL_SIZE,\n            top: food.y * CELL_SIZE,\n          }}\n        />\n      </div>\n      <div style={{ marginTop: '1rem', fontSize: '1.25rem' }}>Score: {score}</div>\n      {gameOver && (\n        <div style={{ marginTop: '1rem' }}>\n          <p style={{ fontSize: '1.25rem', fontWeight: 'bold', color: '#dc2626' }}>Game Over!</p>\n          <button\n            style={{\n              marginTop: '0.5rem',\n              padding: '0.5rem 1rem',\n              backgroundColor: '#3b82f6',\n              color: 'white',\n              border: 'none',\n              borderRadius: '0.25rem',\n              cursor: 'pointer',\n            }}\n            onClick={resetGame}\n          >\n            Play Again\n          </button>\n        </div>\n      )}\n      <div style={{ marginTop: '1rem', fontSize: '0.875rem', color: '#4b5563' }}>\n        Use arrow keys to control the snake\n      </div>\n    </div>\n  );\n};\n\nexport default SnakeGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}